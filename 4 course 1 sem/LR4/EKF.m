function [x P] = EKF(x_, P_, z, F, F_param, DF, DF_param, H, H_param, DH, DH_param, Q, R)

% [x P] = EKF(x_, P_, z, F, F_param, DF, DF_param, H, H_param, DH, DH_param, Q, R)
%
% ?еализует один шаг алгоритма 'Extended Kalman Filter'.
% ?араметры:
%     x_       - оценка, полученна? на предыдущем шаге
%     P_       - ковариационна? матрица оценки предыдущего шага
%     z        - текущее измерение
%     F        - функци? преобразовани? состо?ни? оцениваемого процесса
%     F_param  - дополнительные параметры функции преобразовани? состо?ни?
%     DF       - ?кобиан функции преобразовани? состо?ни?
%     DF_param - дополнительные параметры ?кобиана функции преобразовани? состо?ни?
%     H        - функци? модели измерений
%     H_param  - дополнительные параметры функции измерени?
%     DH       - ?кобиан функции измерени?
%     DH_param - дополнительные параметры ?кобиана функции измерени?
%     Q        - ковариационна? матрица возмущений модели оцениваемого процесса
%     R        - ковариационна? матрица шумов измерени?

  x = F(x_, F_param);
  A = DF(x, DF_param);
  C = DH(x, DH_param);
  P = A*P_*A' + Q;
  K = P*C'*inv(C*P*C' + R);
  x = x + K*(z - H(x, H_param));
  P = P - K*C*P;  % м.б здесь нужно пересчитать ? в соответствии с обновленной оценкой?

end
